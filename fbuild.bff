.BuildType     = 'Release'
.FlagsDebug    = ' -Od -g'
.FlagsRelease  = ' -O3'
.FlagsStandard = ' -std=c++17'

.Librarian          = '/usr/bin/ar'
.LibrarianOptions   = 'rcs "%2" "%1"'

Compiler('ShaderCompiler')
{
  .Executable = '/usr/bin/glslc'
  .CompilerFamily = 'custom'
}

ObjectList('shaders')
{
  .Compiler                = 'ShaderCompiler'
  .CompilerOptions         = '-o "%2" "%1" -c'
  .CompilerInputPath       = 'shaders/'
  .CompilerInputPattern    = { '*.vert', '*.frag' }
  .CompilerOutputPath      = '_out/shaders'
  .CompilerOutputExtension = '.spv'
}

Library('cudaview')
{
  .Compiler           = '/usr/bin/g++'
  .CompilerOptions    = '-o "%2" "%1" -c'
                      + ' -Iinclude -Icuda'
                      + .'Flags$BuildType$'
                      + .'FlagsStandard'
  .CompilerInputPath  = 'src/'
  .CompilerOutputPath = '_out/'
  .LibrarianOutput      = '_out/cudaview.lib'
}

ObjectList('cudaprogram')
{
  .Compiler             = '/usr/local/cuda/bin/nvcc'
  .CompilerOptions      = '-o "%2" "%1" -c'
                        + ' -Iinclude'
                        + .'FlagsStandard'
  .CompilerInputPath    = 'cuda/'
  .CompilerInputPattern = { '*.cu', '*.cpp' }
  .CompilerOutputPath   = '_out/'
}

Executable('app')
{
  .Libraries     = { 'cudaview', 'cudaprogram' }
  .Linker        = '/usr/local/cuda/bin/nvcc'
  .LinkerOutput  = '_out/app'
  .LinkerOptions = '"%1" -o "%2"'
                 + ' -lglfw -lvulkan -ldl'
}

Alias('all') { .Targets = { 'app', 'shaders' } }
