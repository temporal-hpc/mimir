.BuildType    = 'Debug'
.FlagsDebug   = ' -g'
.FlagsRelease = ' -O3 -Wall -Wshadow -Wcast-align'

.Librarian        = '/usr/bin/ar'
.LibrarianOptions = 'rcs "%2" "%1"'

Compiler('ShaderCompiler')
{
  .Executable = '/usr/bin/glslc'
  .CompilerFamily = 'custom'
}

ObjectList('shaders')
{
  .Compiler                = 'ShaderCompiler'
  .CompilerOptions         = '-o "%2" "%1" -c'
  .CompilerInputPath       = 'shaders/'
  .CompilerInputPattern    = { '*.vert', '*.frag' }
  .CompilerOutputPath      = '_out/shaders'
  .CompilerOutputExtension = '.spv'
}

ObjectList('imgui')
{
  .Compiler           = '/usr/bin/g++'
  .CompilerOptions    = '-o "%2" "%1" -c'
                      + ' -Icontrib/imgui-1.84.2 -Icontrib/imgui-1.84.2/backends'
  .CompilerInputPath  = 'contrib/imgui-1.84.2'
  .CompilerOutputPath = '_out/'
}

Library('cudaview')
{
  .Compiler           = '/usr/bin/g++'
  .CompilerOptions    = '-o "%2" "%1" -c'
                      + ' -Iinclude -I/usr/local/cuda/include'
                      + ' -Icontrib/imgui-1.84.2 -Icontrib/stb'
                      + ' -std=c++17'
                      + .'Flags$BuildType$'
  .CompilerInputPath  = 'src/'
  .CompilerOutputPath = '_out/'
  .LibrarianOutput    = '_out/cudaview.lib'
}

ObjectList('cuda-structured')
{
  .Compiler             = '/usr/local/cuda/bin/nvcc'
  .CompilerOptions      = '-o "%2" "%1" -c'
                        + ' -std=c++17'
                        + ' -Icuda/include -Iinclude -Icontrib/stb'
  .CompilerInputPath    = 'cuda/structured'
  .CompilerInputPattern = { '*.cu', '*.cpp' }
  .CompilerOutputPath   = '_out/'
}

ObjectList('cuda-unstructured')
{
  .Compiler             = '/usr/local/cuda/bin/nvcc'
  .CompilerOptions      = '-o "%2" "%1" -c'
                        + ' -std=c++17'
                        + ' -Icuda/include -Iinclude'
  .CompilerInputPath    = 'cuda/unstructured'
  .CompilerInputPattern = { '*.cu', '*.cpp' }
  .CompilerOutputPath   = '_out/'
}

Executable('run_structured')
{
  .Libraries     = { 'imgui', 'cudaview', 'cuda-structured' }
  .Linker        = '/usr/local/cuda/bin/nvcc'
  .LinkerOutput  = '_out/run_structured'
  .LinkerOptions = '"%1" -o "%2"'
                 + ' -lglfw -lvulkan -ldl'
}

Executable('run_unstructured')
{
  .Libraries     = { 'imgui', 'cudaview', 'cuda-unstructured' }
  .Linker        = '/usr/local/cuda/bin/nvcc'
  .LinkerOutput  = '_out/run_unstructured'
  .LinkerOptions = '"%1" -o "%2"'
                 + ' -lglfw -lvulkan -ldl'
}

Alias('all') { .Targets = { 'run_structured', 'run_unstructured', 'shaders' } }
